{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const registerUser = createAsyncThunk('registration/registerUser', async ({\n  login,\n  password,\n  birthDate,\n  name,\n  email,\n  photo\n}) => {\n  try {\n    const apiEndpointRegister = \"http://127.0.0.1:8000/api/user/register\";\n    const formData = new FormData();\n    formData.append('login', login);\n    formData.append('password', password);\n    formData.append('birth_date', birthDate);\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('photo', photo);\n    const response = await axios.post(apiEndpointRegister, formData);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message || error.message);\n  }\n});\nconst RegistrationSlice = createSlice({\n  name: 'registration',\n  initialState: {\n    loading: false,\n    error: null,\n    success: false\n  },\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.success = false;\n    }).addCase(registerUser.fulfilled, state => {\n      state.loading = false;\n      state.success = true;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  clearError\n} = RegistrationSlice.actions;\nexport default RegistrationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","registerUser","login","password","birthDate","name","email","photo","apiEndpointRegister","formData","FormData","append","response","post","data","error","Error","message","RegistrationSlice","initialState","loading","success","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","rejected","action","actions","reducer"],"sources":["C:/Users/Yakov/Documents/Programming/React JS/social-media-frontend/src/redux/RegistrationSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const registerUser = createAsyncThunk(\r\n    'registration/registerUser',\r\n    async ({ login, password, birthDate, name, email, photo }) => {\r\n      try {\r\n        const apiEndpointRegister = \"http://127.0.0.1:8000/api/user/register\";\r\n        const formData = new FormData();\r\n        formData.append('login', login);\r\n        formData.append('password', password);\r\n        formData.append('birth_date', birthDate);\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        formData.append('photo', photo);\r\n        const response = await axios.post(apiEndpointRegister, formData);\r\n        return response.data;\r\n      } catch (error) {\r\n        throw new Error(error.response.data.message || error.message);\r\n      }\r\n    }\r\n  );\r\n\r\nconst RegistrationSlice = createSlice({\r\n  name: 'registration',\r\n  initialState: {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.success = false;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError } = RegistrationSlice.actions;\r\n\r\nexport default RegistrationSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CACxC,2BAA2B,EAC3B,OAAO;EAAEG,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC5D,IAAI;IACF,MAAMC,mBAAmB,GAAG,yCAAyC;IACrE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;IAC/BO,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAER,QAAQ,CAAC;IACrCM,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,SAAS,CAAC;IACxCK,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;IAC7BI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC/BG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/B,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACL,mBAAmB,EAAEC,QAAQ,CAAC;IAChE,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAIF,KAAK,CAACE,OAAO,CAAC;EAC/D;AACF,CACF,CAAC;AAEH,MAAMC,iBAAiB,GAAGpB,WAAW,CAAC;EACpCO,IAAI,EAAE,cAAc;EACpBc,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE,IAAI;IACXM,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,YAAY,CAAC2B,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBS,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDM,OAAO,CAAC1B,YAAY,CAAC4B,SAAS,EAAGL,KAAK,IAAK;MAC1CA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAAC1B,YAAY,CAAC6B,QAAQ,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACjDP,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACT,KAAK,GAAGgB,MAAM,CAAChB,KAAK,CAACE,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM;AAAW,CAAC,GAAGL,iBAAiB,CAACc,OAAO;AAEvD,eAAed,iBAAiB,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
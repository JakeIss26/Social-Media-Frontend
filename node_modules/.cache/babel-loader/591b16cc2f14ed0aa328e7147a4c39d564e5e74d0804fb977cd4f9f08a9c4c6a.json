{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yakov\\\\Documents\\\\Programming\\\\React JS\\\\social-media-frontend\\\\src\\\\components\\\\PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../css/post.css';\nimport PostComponent from './PostComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeed() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getPosts = async () => {\n    try {\n      const token = localStorage.getItem('Token');\n      const response = await axios.get('http://127.0.0.1:8000/api/post', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(response.data);\n      // console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Вызываем функцию для получения постов при монтировании компонента\n  getPosts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostComponent, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(PostFeed, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useState","axios","PostComponent","jsxDEV","_jsxDEV","PostFeed","_s","posts","setPosts","getPosts","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","className","children","map","post","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yakov/Documents/Programming/React JS/social-media-frontend/src/components/PostFeed.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/post.css';\r\nimport PostComponent from './PostComponent';\r\n\r\nfunction PostFeed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = async () => {\r\n        try {\r\n            const token = localStorage.getItem('Token');\r\n            const response = await axios.get('http://127.0.0.1:8000/api/post', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            setPosts(response.data);\r\n            // console.log(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching posts:', error);\r\n        }\r\n    };\r\n\r\n    // Вызываем функцию для получения постов при монтировании компонента\r\n    getPosts();\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            {posts.map((post) => (\r\n                <PostComponent key={post.id} post={post} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,EAAE;QAC/DC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASN,KAAM;QACnC;MACJ,CAAC,CAAC;MACFF,QAAQ,CAACK,QAAQ,CAACI,IAAI,CAAC;MACvB;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;;EAED;EACAT,QAAQ,CAAC,CAAC;EAEV,oBACIL,OAAA;IAAKgB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBd,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACZnB,OAAA,CAACF,aAAa;MAAeqB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CA5BQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
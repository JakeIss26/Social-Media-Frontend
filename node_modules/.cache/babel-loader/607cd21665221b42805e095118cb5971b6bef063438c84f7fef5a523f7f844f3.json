{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yakov\\\\Documents\\\\Programming\\\\React JS\\\\social-media-frontend\\\\src\\\\components\\\\PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../css/post.css';\nimport PostComponent from './PostComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeed() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const batchSize = 3; // Количество страниц данных для загрузки сразу\n  const observer = useRef();\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('Token');\n        const responses = await Promise.all(Array.from({\n          length: batchSize\n        }, (_, i) => axios.get(`http://127.0.0.1:8000/api/post?page=${currentPage + i}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })));\n        const newPosts = responses.flatMap(response => response.data.data);\n        setPosts(prevPosts => [...prevPosts, ...newPosts]);\n        setLoading(false);\n        setCurrentPage(prevPage => prevPage + batchSize);\n        setHasMore(responses.some(response => response.data.next_page_url !== null));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    if (hasMore && !loading) {\n      getPosts();\n    }\n  }, [currentPage, hasMore, loading]);\n  useEffect(() => {\n    observer.current = new IntersectionObserver(handleObserver, {\n      threshold: 0.5\n    });\n    if (observer.current) {\n      observer.current.observe(document.querySelector('#end-of-list'));\n    }\n  }, []);\n  const handleObserver = entities => {\n    const target = entities[0];\n    if (target.isIntersecting && hasMore) {\n      setCurrentPage(prevPage => prevPage + batchSize);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [posts.map((post, index) => /*#__PURE__*/_jsxDEV(PostComponent, {\n      post: post\n    }, `${post.id}_${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"end-of-list\",\n      style: {\n        height: '10px',\n        background: 'transparent'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(PostFeed, \"vQmBO0CsuhWKN57aymkii8CU+Vw=\");\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","PostComponent","jsxDEV","_jsxDEV","PostFeed","_s","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","hasMore","setHasMore","batchSize","observer","getPosts","token","localStorage","getItem","responses","Promise","all","Array","from","length","_","i","get","headers","Authorization","newPosts","flatMap","response","data","prevPosts","prevPage","some","next_page_url","error","console","current","IntersectionObserver","handleObserver","threshold","observe","document","querySelector","entities","target","isIntersecting","className","children","map","post","index","id","fileName","_jsxFileName","lineNumber","columnNumber","style","height","background","_c","$RefreshReg$"],"sources":["C:/Users/Yakov/Documents/Programming/React JS/social-media-frontend/src/components/PostFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/post.css';\r\nimport PostComponent from './PostComponent';\r\n\r\nfunction PostFeed() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const batchSize = 3; // Количество страниц данных для загрузки сразу\r\n    const observer = useRef();\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const token = localStorage.getItem('Token');\r\n                const responses = await Promise.all(\r\n                    Array.from({ length: batchSize }, (_, i) =>\r\n                        axios.get(`http://127.0.0.1:8000/api/post?page=${currentPage + i}`, {\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`\r\n                            }\r\n                        })\r\n                    )\r\n                );\r\n                const newPosts = responses.flatMap(response => response.data.data);\r\n                setPosts(prevPosts => [...prevPosts, ...newPosts]);\r\n                setLoading(false);\r\n                setCurrentPage(prevPage => prevPage + batchSize);\r\n                setHasMore(responses.some(response => response.data.next_page_url !== null));\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        if (hasMore && !loading) {\r\n            getPosts();\r\n        }\r\n    }, [currentPage, hasMore, loading]);\r\n\r\n    useEffect(() => {\r\n        observer.current = new IntersectionObserver(handleObserver, { threshold: 0.5 });\r\n        if (observer.current) {\r\n            observer.current.observe(document.querySelector('#end-of-list'));\r\n        }\r\n    }, []);\r\n\r\n    const handleObserver = (entities) => {\r\n        const target = entities[0];\r\n        if (target.isIntersecting && hasMore) {\r\n            setCurrentPage(prevPage => prevPage + batchSize);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            {posts.map((post, index) => (\r\n                <PostComponent key={`${post.id}_${index}`} post={post} />\r\n            ))}\r\n            <div id=\"end-of-list\" style={{ height: '10px', background: 'transparent' }}></div>\r\n            {loading && <p>Loading...</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMiB,SAAS,GAAG,CAAC,CAAC,CAAC;EACrB,MAAMC,QAAQ,GAAGhB,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACZ,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACAP,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAEX;QAAU,CAAC,EAAE,CAACY,CAAC,EAAEC,CAAC,KACnC3B,KAAK,CAAC4B,GAAG,CAAE,uCAAsClB,WAAW,GAAGiB,CAAE,EAAC,EAAE;UAChEE,OAAO,EAAE;YACLC,aAAa,EAAG,UAASb,KAAM;UACnC;QACJ,CAAC,CACL,CACJ,CAAC;QACD,MAAMc,QAAQ,GAAGX,SAAS,CAACY,OAAO,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;QAClE3B,QAAQ,CAAC4B,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGJ,QAAQ,CAAC,CAAC;QAClDtB,UAAU,CAAC,KAAK,CAAC;QACjBE,cAAc,CAACyB,QAAQ,IAAIA,QAAQ,GAAGtB,SAAS,CAAC;QAChDD,UAAU,CAACO,SAAS,CAACiB,IAAI,CAACJ,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAACI,aAAa,KAAK,IAAI,CAAC,CAAC;MAChF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAED,IAAI3B,OAAO,IAAI,CAACJ,OAAO,EAAE;MACrBQ,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC,EAAE,CAACN,WAAW,EAAEE,OAAO,EAAEJ,OAAO,CAAC,CAAC;EAEnCV,SAAS,CAAC,MAAM;IACZiB,QAAQ,CAAC0B,OAAO,GAAG,IAAIC,oBAAoB,CAACC,cAAc,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAC/E,IAAI7B,QAAQ,CAAC0B,OAAO,EAAE;MAClB1B,QAAQ,CAAC0B,OAAO,CAACI,OAAO,CAACC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC,CAAC;IACpE;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMJ,cAAc,GAAIK,QAAQ,IAAK;IACjC,MAAMC,MAAM,GAAGD,QAAQ,CAAC,CAAC,CAAC;IAC1B,IAAIC,MAAM,CAACC,cAAc,IAAItC,OAAO,EAAE;MAClCD,cAAc,CAACyB,QAAQ,IAAIA,QAAQ,GAAGtB,SAAS,CAAC;IACpD;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKgD,SAAS,EAAC,OAAO;IAAAC,QAAA,GACjB9C,KAAK,CAAC+C,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBpD,OAAA,CAACF,aAAa;MAA6BqD,IAAI,EAAEA;IAAK,GAAjC,GAAEA,IAAI,CAACE,EAAG,IAAGD,KAAM,EAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC3D,CAAC,eACFzD,OAAA;MAAKqD,EAAE,EAAC,aAAa;MAACK,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAc;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACjFpD,OAAO,iBAAIL,OAAA;MAAAiD,QAAA,EAAG;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAACvD,EAAA,CA5DQD,QAAQ;AAAA4D,EAAA,GAAR5D,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}